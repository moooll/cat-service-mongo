services:
  app-1:
    build: .
    command: sh -c './wait-for redis:6379'
    command: sh -c './wait-for mongo:27017'
    command: sh -c './wait-for kafka:29092 -- ./cat'
    depends_on:
      - mongo
      - redis
      - kafka
    ports:
      - "8081:8081"
    container_name: app-1
    restart: on-failure
    networks: 
      - cat-service
  
  app-2:
    build: .
    command: sh -c './wait-for redis:6379'
    command: sh -c './wait-for mongo:27017'
    command: sh -c './wait-for kafka:29092 -- ./cat'
    depends_on:
      - mongo
      - redis
      - kafka
    ports:
      - "8082:8081"
    container_name: app-2
    restart: on-failure
    networks: 
      - cat-service
  
  mongo: 
    image: mongo
    ports: 
      - "27017:27017"
    container_name: mongo
    restart: on-failure
    networks: 
      - cat-service

  redis:
    image: redis
    depends_on:
      - mongo
    ports: 
      - "6379:6379"
    container_name: redis
    restart: on-failure
    networks: 
      - cat-service

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: on-failure
    networks:
      - cat-service
  
  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
      - redis
    ports:
      - "9092:9092"
    environment: 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT, LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://:29092, LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENERS:  LISTENER_DOCKER_INTERNAL://:29092, LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    restart: on-failure
    networks:
      - cat-service
      


networks: 
  cat-service:
    driver: bridge